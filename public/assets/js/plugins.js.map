{"version":3,"sources":["_plugins.js","breakpoints.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"plugins.js","sourcesContent":["// Avoid `console` errors in browsers that lack a console.\n(function() {\n    var method;\n    var noop = function () {};\n    var methods = [\n        'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',\n        'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',\n        'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',\n        'timeStamp', 'trace', 'warn'\n    ];\n    var length = methods.length;\n    var console = (window.console = window.console || {});\n\n    while (length--) {\n        method = methods[length];\n\n        // Only stub undefined methods.\n        if (!console[method]) {\n            console[method] = noop;\n        }\n    }\n}());","/*\n\tBreakpoints.js\n\tversion 1.0\n\t\n\tCreates handy events for your responsive design breakpoints\n\t\n\tCopyright 2011 XOXCO, Inc\n\thttp://xoxco.com/\n\n\tDocumentation for this plugin lives here:\n\thttp://xoxco.com/projects/code/breakpoints\n\t\n\tLicensed under the MIT license:\n\thttp://www.opensource.org/licenses/mit-license.php\n\n*/\n(function($) {\n\n\tvar lastSize = 0;\n\tvar interval = null;\n\n\t$.fn.resetBreakpoints = function() {\n\t\t$(window).unbind('resize');\n\t\tif (interval) {\n\t\t\tclearInterval(interval);\n\t\t}\n\t\tlastSize = 0;\n\t};\n\t\n\t$.fn.setBreakpoints = function(settings) {\n\t\tvar options = jQuery.extend({\n\t\t\t\t\t\t\tdistinct: true,\n\t\t\t\t\t\t\tbreakpoints: new Array(320,480,768,1024)\n\t\t\t\t    \t},settings);\n\n\n\t\tinterval = setInterval(function() {\n\t\n\t\t\tvar w = $(window).width();\n\t\t\tvar done = false;\n\t\t\t\n\t\t\tfor (var bp in options.breakpoints.sort(function(a,b) { return (b-a) })) {\n\t\t\t\n\t\t\t\t// fire onEnter when a browser expands into a new breakpoint\n\t\t\t\t// if in distinct mode, remove all other breakpoints first.\n\t\t\t\tif (!done && w >= options.breakpoints[bp] && lastSize < options.breakpoints[bp]) {\n\t\t\t\t\tif (options.distinct) {\n\t\t\t\t\t\tfor (var x in options.breakpoints.sort(function(a,b) { return (b-a) })) {\n\t\t\t\t\t\t\tif ($('body').hasClass('breakpoint-' + options.breakpoints[x])) {\n\t\t\t\t\t\t\t\t$('body').removeClass('breakpoint-' + options.breakpoints[x]);\n\t\t\t\t\t\t\t\t$(window).trigger('exitBreakpoint' + options.breakpoints[x]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdone = true;\n\t\t\t\t\t}\n\t\t\t\t\t$('body').addClass('breakpoint-' + options.breakpoints[bp]);\n\t\t\t\t\t$(window).trigger('enterBreakpoint' + options.breakpoints[bp]);\n\n\t\t\t\t}\t\t\t\t\n\n\t\t\t\t// fire onExit when browser contracts out of a larger breakpoint\n\t\t\t\tif (w < options.breakpoints[bp] && lastSize >= options.breakpoints[bp]) {\n\t\t\t\t\t$('body').removeClass('breakpoint-' + options.breakpoints[bp]);\n\t\t\t\t\t$(window).trigger('exitBreakpoint' + options.breakpoints[bp]);\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// if in distinct mode, fire onEnter when browser contracts into a smaller breakpoint\n\t\t\t\tif (\n\t\t\t\t\toptions.distinct && // only one breakpoint at a time\n\t\t\t\t\tw >= options.breakpoints[bp] && // and we are in this one\n\t\t\t\t\tw < options.breakpoints[bp-1] && // and smaller than the bigger one\n\t\t\t\t\tlastSize > w && // and we contracted\n\t\t\t\t\tlastSize >0 &&  // and this is not the first time\n\t\t\t\t\t!$('body').hasClass('breakpoint-' + options.breakpoints[bp]) // and we aren't already in this breakpoint\n\t\t\t\t\t) {\t\t\t\t\t\n\t\t\t\t\t$('body').addClass('breakpoint-' + options.breakpoints[bp]);\n\t\t\t\t\t$(window).trigger('enterBreakpoint' + options.breakpoints[bp]);\n\n\t\t\t\t}\t\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t// set up for next call\n\t\t\tif (lastSize != w) {\n\t\t\t\tlastSize = w;\n\t\t\t}\n\t\t},250);\n\t};\n\t\n})(jQuery);\n"]}